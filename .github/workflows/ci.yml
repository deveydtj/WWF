name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: wwf-api
      DISTRIBUTION_ID: ${{ secrets.CF_DISTRIBUTION_ID }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Python dependencies
        run: pip install pytest

      - name: Install Node dependencies
        run: |
          npm install
          npx cypress install

      - name: Run unit and E2E tests
        run: |
          python -m pytest -v
          npx cypress run --headless

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t $ECR_REPOSITORY:$GITHUB_SHA .
          docker tag $ECR_REPOSITORY:$GITHUB_SHA ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA

      - name: Invalidate CloudFront cache
        if: github.ref == 'refs/heads/main'
        run: |
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'
