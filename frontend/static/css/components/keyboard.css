/* ─────────────────────────────────────────────
   Keyboard - Virtual keyboard styling
   ───────────────────────────────────────────── */

#keyboard {
  display: inline-block;
  flex: 0 0 auto; /* Don't shrink */
  /* shrink keyboard height slightly for cramped screens */
  min-height: calc(var(--tile-size) * 2.4);
  width: 100%;
  max-width: 500px; /* Prevent keyboard from getting too wide on desktop */
  /* Ensure keyboard stays at bottom and is always visible */
  position: relative;
  z-index: 10;
  margin-bottom: env(safe-area-inset-bottom, 0px); /* Respect safe areas */
}

/* Mobile-first: Full width keyboard */
@media (max-width: 600px) {
  #keyboard {
    max-width: 100% !important; /* Full width on mobile */
    width: 100vw; /* Use full viewport width */
    margin-left: calc(-1 * var(--container-padding, 5px)); /* Account for container padding */
    margin-right: calc(-1 * var(--container-padding, 5px)); /* Account for container padding */
    padding: 0 var(--container-padding, 5px); /* Add padding to maintain button spacing */
    box-sizing: border-box;
  }
}

/* Ensure keyboard container has proper flexbox behavior */
#gameColumn {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
}

/* Keyboard should stick to bottom */
#keyboard {
  flex-shrink: 0; /* Never shrink the keyboard */
}

.keyboard-row {
  display: flex;
  justify-content: center;
  margin-bottom: calc(var(--tile-gap) * 1.2);
}

/* Mobile: Distribute keys across full width */
@media (max-width: 600px) {
  .keyboard-row {
    justify-content: space-between; /* Distribute keys evenly */
    padding: 0 4px; /* Small padding to prevent edge touching */
  }
}

.key {
  min-width: calc(var(--tile-size) * 0.58);
  height: calc(var(--tile-size) * 0.83);
  margin: calc(var(--tile-gap) / 2);
  border: none;
  background-color: var(--key-bg);
  border-radius: 8px;
  font-size: calc(var(--tile-size) * 0.27);
  font-weight: 500;
  text-transform: uppercase;
  cursor: pointer;
  color: var(--key-text);
  box-shadow: 4px 4px 8px var(--shadow-color-dark),
              -4px -4px 8px var(--shadow-color-light);
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 5px;
}

/* Mobile: Optimize key sizing for full width */
@media (max-width: 600px) {
  .key {
    /* Calculate key width to distribute evenly across screen */
    flex: 1; /* Allow keys to grow and fill available space */
    min-width: 0; /* Allow flexbox to control width */
    max-width: calc((100vw - 2 * var(--container-padding, 5px) - 8px) / 10); /* Max width for standard keys */
    height: calc(var(--mobile-tile-size, var(--tile-size)) * 0.83);
    margin: 2px; /* Reduced margin for more space */
    font-size: calc(var(--mobile-tile-size, var(--tile-size)) * 0.27);
  }
}

.key.wide { 
  min-width: calc(var(--tile-size) * 1.2); 
}

/* Mobile: Adjust wide keys */
@media (max-width: 600px) {
  .key.wide {
    flex: 1.5; /* Make wide keys proportionally larger */
    min-width: 0;
  }
}

.key:hover {
  transform: translateY(-1px);
  box-shadow: 5px 5px 10px var(--shadow-color-dark),
              -5px -5px 10px var(--shadow-color-light);
}

.key:active,
.key.active-key-press {
  box-shadow: inset 2px 2px 5px var(--inset-shadow-dark),
              inset -2px -2px 5px var(--inset-shadow-light);
  font-size: 15px;
  transform: scale(0.95);
}

.key.correct,
.key.present,
.key.absent {
  color: white;
  transition: background-color 0.3s, color 0.3s, box-shadow 0.3s;
}

.key.correct {
  background-color: var(--correct-bg);
  box-shadow: 3px 3px 6px var(--correct-shadow-dark),
              -3px -3px 6px var(--correct-shadow-light);
}

.key.present {
  background-color: var(--present-bg);
  box-shadow: 3px 3px 6px var(--present-shadow-dark),
              -3px -3px 6px var(--present-shadow-light);
}

.key.absent {
  background-color: var(--absent-bg);
  box-shadow: 3px 3px 6px var(--absent-shadow-dark),
              -3px -3px 6px var(--absent-shadow-light);
}