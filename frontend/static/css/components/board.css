/* ─────────────────────────────────────────────
   Board and Tiles - Game board layout and tile styles
   ───────────────────────────────────────────── */

/* Board area container - centered layout */
#boardArea {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  margin: 5px auto 0;
  width: 100%;
  position: relative;
  flex: 0 0 auto; /* Only take space needed, don't expand */
}

/* Large screen board area - properly constrain within the game column */
@media (min-width: 1200px) {
  #boardArea {
    /* Don't constrain width - let it use the full game column space */
    width: 100%;
    max-width: 100%; /* Use full width of parent container (gameColumn) */
    margin: 5px auto 0;
  }
}

/* Game board grid */
#board {
  margin: 0;
  display: grid;
  grid-template-columns: repeat(5, var(--tile-size));
  grid-gap: var(--tile-gap);
  max-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
}

/* Board stamps and confetti */
#stampContainer {
  /* Position stamps within center panel to the left of the board */
  position: absolute;
  display: none;
  /* Position to the left of the board area */
  top: 0; /* Align with board area top */
  left: calc(50% - var(--board-width) / 2 - 60px); /* 60px to the left of board for proper gap */
  pointer-events: none;
  z-index: var(--z-panel-interactive); /* Ensure stamps appear above other elements */
  /* Dynamic width to accommodate any emoji characters */
  width: 40px; /* Fixed width for stamps */
  height: calc(6 * (var(--tile-size) + var(--tile-gap)) - var(--tile-gap)); /* Match board height */
}

/* Show stamps on everything except mobile */
@media (min-width: 601px) {
  #stampContainer {
    display: block;
  }
}

/* Medium screen stamp positioning fix to prevent overlap with history panel */
@media (min-width: 601px) and (max-width: 900px) {
  #stampContainer {
    /* Use a safer left positioning to prevent overlap with history panel */
    left: max(10px, calc(50% - var(--board-width) / 2 - 60px));
  }
}

/* Emoji stamps next to board */
.emoji-stamp {
  position: absolute;
  right: 5px; /* 5px gap from stamps to board */
  font-size: calc(var(--tile-size) * 0.8); /* Slightly smaller than tiles */
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Simple emoji styling - no background, borders, or labels */
  background: transparent;
  padding: 0;
  border: none;
  box-shadow: none;
  outline: none;
  /* Black stroke outline for light mode */
  -webkit-text-stroke: 1px black;
  text-stroke: 1px black;
  pointer-events: none;
}

/* Dark mode stamp styling */
@media (prefers-color-scheme: dark) {
  .emoji-stamp {
    /* White stroke outline for dark mode */
    -webkit-text-stroke: 1px white;
    text-stroke: 1px white;
  }
}



/* Responsive adjustments */
@media (max-width: 600px) {  
  #stampContainer {
    display: none !important; /* Hide stamps completely on mobile */
  }
  
  .emoji-stamp {
    right: 8px; /* Smaller gap on mobile */
    font-size: calc(var(--tile-size) * 0.7); /* Smaller stamps on mobile */
  }
}

/* Keep stamps in their normal position - history panel will move to accommodate */

.confetti-container {
  position: absolute;
  width: 0;
  height: 0;
  pointer-events: none;
  z-index: var(--z-board-overlay);
}

.confetti-piece {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 1px;
}

/* Individual tiles */
.tile {
  width: var(--tile-size);
  height: var(--tile-size);
  border: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: calc(var(--tile-size) * 0.46);
  font-weight: bold;
  text-transform: uppercase;
  background-color: var(--tile-bg);
  border-radius: 8px;
  box-shadow: 5px 5px 10px var(--shadow-color-dark),
              -5px -5px 10px var(--shadow-color-light);
  transition: background-color 0.3s, color 0.3s, border-color 0.3s,
              transform 0.1s, opacity 0.1s;
  color: var(--text-color);
}

.tile.backspace-effect {
  transform: scale(0.85);
  opacity: 0.6;
}

.tile.ghost {
  opacity: 0.4;
  border: 2px dashed var(--text-color);
  outline: 2px solid var(--text-color);
  outline-offset: -2px;
  color: var(--text-color);
}

.tile.hint-target {
  border: 2px dashed var(--present-bg);
  cursor: pointer;
}

body.hint-selecting .tile:not(.hint-target) {
  opacity: 0.3;
  pointer-events: none;
}

/* Tile states */
.tile.correct,
.tile.present,
.tile.absent {
  color: white;
  border-color: transparent;
  transform: rotateX(360deg);
  transition: background-color 0.3s, color 0.3s, box-shadow 0.3s,
              transform 0.6s, border-color 0.3s;
}

.tile.correct {
  background-color: var(--correct-bg);
  box-shadow: inset 3px 3px 6px var(--correct-shadow-dark),
              inset -3px -3px 6px var(--correct-shadow-light);
}

.tile.present {
  background-color: var(--present-bg);
  box-shadow: inset 3px 3px 6px var(--present-shadow-dark),
              inset -3px -3px 6px var(--present-shadow-light);
}

.tile.absent {
  background-color: var(--absent-bg);
  box-shadow: inset 3px 3px 6px var(--absent-shadow-dark),
              inset -3px -3px 6px var(--absent-shadow-light);
}

.tile.reset-out {
  animation: tileResetOut 0.25s forwards;
}

.tile.reset-in {
  animation: tileResetIn 0.25s forwards;
}

/* Letter typing animation */
.tile.letter-in {
  animation: tileLetterIn 0.2s ease-out;
}

/* Tile flip animation for color reveal */
.tile.flip-reveal {
  animation: tileFlip 0.6s ease-in-out;
}

/* Input area */
#inputArea {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 5px auto;
  width: var(--board-width);
  flex: 0 0 auto;
  gap: calc(var(--tile-gap) * 2);
}

#guessInput,
#submitGuess {
  border: none;
  font-size: calc(var(--tile-size) * 0.3);
  border-radius: calc(var(--tile-size) * 0.15);
  background-color: var(--bg-color);
  color: var(--text-color);
  outline: none;
  transition: box-shadow 0.2s, background-color 0.3s, color 0.3s;
}

#guessInput {
  /* Calculate input width: board width minus 2 buttons and gaps */
  width: calc(var(--board-width) - (var(--uniform-button-width) * 2) - (var(--tile-gap) * 4));
  height: var(--uniform-button-height);
  padding: 0 calc(var(--tile-size) * 0.2);
  text-transform: uppercase;
  box-shadow: inset 3px 3px 6px var(--inset-shadow-dark),
              inset -3px -3px 6px var(--inset-shadow-light);
  flex: 1 1 auto; /* Allow input to grow/shrink as needed */
  /* Ensure minimum width for 5 characters: font-size * char-width-ratio * 5-chars + padding */
  min-width: calc((var(--tile-size) * 0.3) * 0.6 * 5 + var(--tile-size) * 0.4);
}

#submitGuess {
  width: var(--uniform-button-width);
  height: var(--uniform-button-height);
  cursor: pointer;
  font-weight: 500;
  box-shadow: 5px 5px 10px var(--shadow-color-dark),
              -5px -5px 10px var(--shadow-color-light);
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 0 0 auto; /* Prevent flexbox from shrinking the button */
}

#submitGuess:active {
  box-shadow: inset 3px 3px 6px var(--inset-shadow-dark),
              inset -3px -3px 6px var(--inset-shadow-light);
  color: var(--text-color-light);
}

#submitGuess:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: inset 3px 3px 6px var(--inset-shadow-dark),
              inset -3px -3px 6px var(--inset-shadow-light);
}

/* Hint tooltip */
#hintTooltip {
  display: none;
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-bottom: 8px;
  background: var(--bg-color);
  color: var(--text-color);
  padding: 6px 10px;
  border-radius: 6px;
  box-shadow: 3px 3px 6px var(--shadow-color-dark),
              -3px -3px 6px var(--shadow-color-light);
  white-space: nowrap;
  pointer-events: none;
  font-size: 0.9em;
}

#hintTooltip::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid var(--bg-color);
  transform: translateX(-50%);
}