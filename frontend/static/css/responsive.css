/* ─────────────────────────────────────────────
   Responsive Design - Enhanced mobile and screen size adaptations
   ───────────────────────────────────────────── */

/* Modern container-based responsive design */
@container app (max-width: 600px) {
  /* Mobile layout optimizations */
  #appContainer {
    padding: 5px;
    min-height: var(--keyboard-safe-height, 100vh);
  }

  :root {
    /* Mobile scaling - use enhanced scaling values when available */
    --tile-size: var(--current-tile-size, min(8vmin, 32px));
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }
}

/* Enhanced mobile devices (max-width: 600px) with improved keyboard handling */
@media (max-width: 600px) {
  #appContainer {
    padding: 5px;
    min-height: var(--keyboard-safe-height, calc(var(--vh, 1vh) * 100));
  }

  /* Enhanced keyboard handling with modern viewport units */
  #keyboard {
    min-height: calc(var(--tile-size) * 2.2);
    margin-top: 5px;
    margin-bottom: max(env(safe-area-inset-bottom, 0px), env(keyboard-inset-height, 0px));
    position: relative;
    z-index: 100;
    flex-shrink: 0;
    transform: scale(var(--keyboard-scale, 1));
    transform-origin: center bottom;
  }

  /* Enhanced gameColumn with modern viewport support */
  #gameColumn {
    min-height: var(--keyboard-safe-height, calc(var(--vh, 1vh) * 100));
    display: flex;
    flex-direction: column;
  }

  /* Improved board area with container queries */
  #boardArea {
    flex: 0 0 auto;
    min-height: auto; /* Calculate height based on content */
    height: auto; /* Allow height to be calculated from board content */
  }

  /* Enhanced mobile tile sizing */
  :root {
    --tile-size: var(--current-tile-size, min(8vmin, 32px));
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }

  .tile {
    width: var(--tile-size);
    height: var(--tile-size);
    font-size: max(12px, calc(var(--tile-size) * 0.44));
    border-radius: clamp(3px, var(--tile-size) * 0.1, 6px);
  }

  .key {
    min-width: max(var(--min-touch-target, 44px), calc(var(--tile-size) * 0.58));
    height: max(var(--min-touch-target, 44px), calc(var(--tile-size) * 0.83));
    font-size: max(12px, calc(var(--tile-size) * 0.27));
  }

  #appContainer {
    padding: 5px;
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
  }

  #optionsMenu {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  #optionsToggle {
    display: none !important; /* Hidden on mobile - replaced by mobile menu */
  }
  
  #chatNotify {
    display: none !important; /* Hidden on mobile - replaced by mobile menu */
  }

  #mobileMenuToggle {
    display: block !important;
    position: fixed !important;
    top: 50px !important;
    right: 10px !important;
    z-index: 70 !important;
    font-size: 18px !important;
  }

  /* Hide duplicate host control buttons on mobile - they're now in the mobile menu */
  #hostControls {
    display: none !important;
  }

  /* Hide lobby code on mobile since it's now in the title */
  #lobbyCode {
    display: none !important;
  }

  /* Hide player count in mobile/light mode to save space */
  #playerCount {
    display: none;
  }

  /* Panel positioning for mobile */
  #historyBox {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    max-height: 0;
    overflow-y: hidden;
    border-radius: 0;
    padding: 0;
    box-shadow: none;
    background: var(--bg-color);
    opacity: 0;
    transform-origin: bottom center;
    transform: scale(0);
    z-index: 50;
    pointer-events: none;
  }

  #definitionBox {
    position: fixed;
    bottom: 0;
    right: 0;
    width: 100%;
    max-height: 0;
    overflow-y: hidden;
    border-radius: 0;
    padding: 0;
    box-shadow: none;
    background: var(--bg-color);
    opacity: 0;
    transform-origin: bottom center;
    transform: scale(0);
    z-index: 50;
    pointer-events: none;
  }

  #chatBox {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    max-height: 0;
    overflow: hidden;
    border-radius: 0;
    padding: 0;
    box-shadow: none;
    background: var(--bg-color);
    opacity: 0;
    transform-origin: bottom center;
    transform: scale(0);
    z-index: 50;
    display: flex;
    flex-direction: column;
    pointer-events: none;
  }

  /* Open states for mobile panels */
  body.history-open #historyBox {
    max-height: 50vh;
    max-width: calc(98% - 20px);
    padding: 8px;
    overflow-y: auto;
    border-radius: 0;
    box-shadow: inset 2px 2px 4px var(--shadow-color-dark),
                inset -2px -2px 4px var(--shadow-color-light);
    opacity: 1;
    transform: scale(1);
    transition: transform 0.3s ease, opacity 0.3s ease;
    pointer-events: auto;
  }

  body.definition-open #definitionBox {
    display: block;
    max-width: calc(98% - 20px);
    padding: 8px;
    overflow-y: auto;
    border-radius: 0;
    box-shadow: inset 2px 2px 4px var(--shadow-color-dark),
                inset -2px -2px 4px var(--shadow-color-light);
    opacity: 1;
    transform: scale(1);
    transition: transform 0.3s ease, opacity 0.3s ease;
    pointer-events: auto;
  }

  body.chat-open #chatBox {
    display: flex;
    max-height: 40vh;
    max-width: calc(98% - 20px);
    padding: 36px 8px 8px;
    overflow: hidden;
    border-radius: 0;
    box-shadow: inset 2px 2px 4px var(--shadow-color-dark),
                inset -2px -2px 4px var(--shadow-color-light);
    opacity: 1;
    transform: scale(1);
    transition: transform 0.3s ease, opacity 0.3s ease;
    flex-direction: column;
    pointer-events: auto;
  }

  #historyBox h3 {
    display: none;
  }

  .history-item .history-guess-tiles .tile {
    width: 20px;
    height: 20px;
    font-size: 12px;
    line-height: 20px;
  }

  /* Mobile tile and layout sizing */
  :root {
    /* Mobile devices - smaller tiles to ensure keyboard visibility */
    --tile-size: min(8vmin, 32px);
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }

  #board {
    grid-template-columns: repeat(5, var(--tile-size));
    grid-gap: var(--tile-gap);
    margin: 0;
  }

  .tile {
    width: var(--tile-size);
    height: var(--tile-size);
    font-size: calc(var(--tile-size) * 0.44);
    border-radius: 4px;
    box-shadow: 3px 3px 6px var(--shadow-color-dark),
                -3px -3px 6px var(--shadow-color-light);
  }

  /* Mobile reset button positioning - move to top left */
  #resetWrapper {
    position: fixed !important;
    top: 10px !important;
    left: 10px !important;
    z-index: 80 !important;
    order: unset !important;
    margin: 0 !important;
  }

  /* Hide input area on mobile since users should use on-screen keyboard */
  #inputArea {
    display: none !important; /* Hide input area on mobile - users should use on-screen keyboard */
  }

  #messagePopup {
    font-size: 16px;
  }

  /* Points popup mobile positioning */
  #pointsPopup {
    top: 20%;
    font-size: 20px;
    padding: 10px 16px;
    /* Better mobile positioning */
    max-width: calc(100vw - 40px);
    text-align: center;
  }

  /* Enhanced mobile keyboard adjustments with virtual keyboard support */
  #keyboard {
    min-height: calc(var(--tile-size) * 2.2);
    margin-bottom: max(env(safe-area-inset-bottom, 0px), env(keyboard-inset-height, 0px));
    /* Ensure keyboard is always visible above virtual keyboard */
    position: relative;
    z-index: 100;
    flex-shrink: 0;
    transform: scale(var(--keyboard-scale, 1));
    transform-origin: center bottom;
  }

  /* Enhanced gameColumn with modern viewport support */
  #gameColumn {
    min-height: var(--keyboard-safe-height, calc(var(--vh, 1vh) * 100));
    display: flex;
    flex-direction: column;
  }

  /* Board area should only take space it needs, not expand */
  #boardArea {
    flex: 0 0 auto; /* Only take space needed, don't expand */
    min-height: auto; /* Calculate height based on content */
    height: auto; /* Allow height to be calculated from board content */
  }

  /* Ensure input area doesn't take excessive space */
  #inputArea {
    flex: 0 0 auto; /* Don't allow expansion */
    margin: 3px auto 3px; /* Reduced margins to keep keyboard closer to board */
  }

  /* Keep message areas compact */
  #message {
    flex: 0 0 auto;
    margin: 3px 0; /* Reduced margin */
  }

  #messagePopup {
    flex: 0 0 auto;
  }

  /* Position keyboard immediately after other elements */
  #keyboard {
    flex: 0 0 auto; /* Don't shrink or expand */
    margin-top: 3px; /* Reduced margin to position closer to board */
    order: 999; /* Ensure keyboard comes last in flex order */
  }

  .key {
    min-width: calc(var(--tile-size) * 0.58);
    height: calc(var(--tile-size) * 0.83);
    margin: calc(var(--tile-gap) / 2);
    font-size: calc(var(--tile-size) * 0.27);
    padding: 0 5px;
    box-shadow: 3px 3px 6px var(--shadow-color-dark),
                -3px -3px 6px var(--shadow-color-light);
    border-radius: 6px;
  }

  .key.wide {
    min-width: calc(var(--tile-size) * 1.2);
  }

  /* Mobile reset button - now uses unified sizing */

  .leaderboard-entry {
    font-size: calc(1em * var(--ui-scale));
    padding: calc(5px * var(--ui-scale)) calc(10px * var(--ui-scale));
    margin: 0 3px;
    min-width: calc(40px * var(--ui-scale));
  }

  .hint-badge {
    margin-left: 4px;
    font-size: calc(0.7em * var(--ui-scale));
    animation: hint-pulse 4s ease-in-out infinite;
  }

  h1 {
    font-size: calc(1.5em * var(--ui-scale));
    margin-bottom: 2px;
  }
  
  #message {
    font-size: 16px;
    margin-top: 12px;
  }

  /* Additional mobile layout fixes */
  #titleBar {
    flex-direction: column;
    gap: 0.5rem;
    align-items: center;
  }
  
  #titleBar h1 {
    font-size: 1.5rem;
    margin: 0;
  }
  
  /* Mobile leaderboard inline with title */
  #titleBar .mobile-title-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    width: 100%;
    gap: 0.5rem;
    position: relative;
  }
  
  #titleBar .mobile-title-row h1 {
    margin: 0;
    text-align: center;
    /* Scale down title to always fit on one line */
    font-size: clamp(1.1rem, 4.5vw, 1.5rem);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 60vw;
  }
  
  #titleBar .mobile-leaderboard-container {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    min-width: 0;
    overflow: hidden;
    max-width: 200px;
  }
  
  #titleBar .mobile-leaderboard-container #leaderboard {
    margin: 0;
    padding: 0;
    gap: 8px;
    max-height: 50px;
    overflow-x: auto;
    overflow-y: hidden;
    flex-wrap: nowrap;
    justify-content: flex-start;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    display: flex;
  }
  
  #titleBar .mobile-leaderboard-container #leaderboard::-webkit-scrollbar {
    display: none;
  }
  
  #titleBar .mobile-leaderboard-container #leaderboard {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  /* Hide the separate leaderboard on mobile when it's moved inline */
  body:has(.mobile-leaderboard-container #leaderboard) > #appContainer > #leaderboard:not(.mobile-inline) {
    display: none;
  }
  
  /* Ensure leaderboard entries are appropriately sized for mobile inline */
  #titleBar .mobile-leaderboard-container .leaderboard-entry {
    font-size: calc(0.9em * var(--ui-scale));
    padding: calc(4px * var(--ui-scale)) calc(8px * var(--ui-scale));
    margin: 0 2px;
    min-width: calc(35px * var(--ui-scale));
    white-space: nowrap;
    flex-shrink: 0;
  }
}

/* Extra small devices */
@media (max-width: 400px) {
  :root {
    --tile-size: min(9vmin, 34px);
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }
  
  #keyboard {
    min-height: calc(var(--tile-size) * 2.0);
    /* More aggressive positioning for very small screens */
    margin-bottom: max(2px, env(safe-area-inset-bottom, 0px));
    /* Ensure it's always visible by reducing margins */
    margin-top: 5px;
  }

  .key {
    min-width: calc(var(--tile-size) * 0.58);
    height: calc(var(--tile-size) * 0.75);
    font-size: calc(var(--tile-size) * 0.24);
    margin: 1px;
  }

  /* Make keyboard more compact to prevent overflow */
  .keyboard-row {
    margin-bottom: calc(var(--tile-gap) * 0.8);
  }
}

/* Very small devices */
@media (max-width: 350px) {
  :root {
    --tile-size: min(8vmin, 30px);
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }
}

/* Ultra small devices */
@media (max-width: 300px) {
  :root {
    --tile-size: min(7vmin, 26px);
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }
  
  #keyboard {
    /* Very compact keyboard for tiny screens */
    min-height: calc(var(--tile-size) * 1.8);
    margin-bottom: max(1px, env(safe-area-inset-bottom, 0px));
    margin-top: 2px;
  }
  
  .key {
    min-width: calc(var(--tile-size) * 0.52);
    height: calc(var(--tile-size) * 0.7);
    font-size: calc(var(--tile-size) * 0.22);
    margin: 1px;
  }

  .keyboard-row {
    margin-bottom: calc(var(--tile-gap) * 0.6);
  }

  /* Keep input area visible but more compact on ultra small screens */
  #inputArea {
    margin-bottom: 3px;
    gap: calc(var(--tile-gap));
  }
}

/* Medium screens (601px - 900px) */
@media (min-width: 601px) and (max-width: 900px) {
  /* Hide player count in medium mode to save space and prevent input field overlap */
  #playerCount {
    display: none;
  }

  #historyBox,
  #definitionBox,
  #chatBox {
    width: clamp(14rem, 30vw, 17rem);
  }

  #optionsToggle {
    display: block;
    left: auto;
    right: 0;
  }
  
  #chatNotify {
    left: auto;
    right: 0;
  }

  /* Fix title bar layout for medium screens - override mobile layout */
  #titleBar {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }
  
  #titleBar .mobile-title-row {
    display: contents;
  }
  
  #titleBar h1 {
    order: 2;
    flex: 1;
    margin: 0;
    text-align: center;
    font-size: calc(1.4rem * var(--ui-scale)); /* Reduced from 1.8rem to 1.4rem */
  }
  
  #resetWrapper {
    order: 1;
    margin-left: 0;
  }
  
  #titleBar .mobile-leaderboard-container {
    order: 3;
    flex: 0 0 auto;
    max-width: none;
  }

  body[data-mode='medium'] #historyClose,
  body[data-mode='medium'] #definitionClose,
  body[data-mode='medium'] #chatClose {
    display: block;
  }

  body[data-mode='medium'] #historyBox,
  body[data-mode='medium'] #definitionBox,
  body[data-mode='medium'] #chatBox {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 90%;
    max-height: 80vh;
    overflow-y: auto;
    z-index: 80;
  }

  body[data-mode='medium'] #chatBox {
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  body[data-mode='medium'] #historyBox,
  body[data-mode='medium'] #definitionBox,
  body[data-mode='medium'] #chatBox {
    transform-origin: center center;
  }
  
  body[data-mode='medium']:not(.history-open) #historyBox,
  body[data-mode='medium']:not(.definition-open) #definitionBox,
  body[data-mode='medium']:not(.chat-open) #chatBox {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    pointer-events: none;
  }

  :root {
    /* Medium screens: Use smaller tiles to prevent input field from being hidden */
    --tile-size: min(8vmin, 42px);
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }
  
  #keyboard {
    min-height: calc(var(--tile-size) * 2.3);
    flex-shrink: 0; /* Prevent keyboard from shrinking */
  }

  /* Ensure gameColumn uses proper flexbox layout */
  #gameColumn {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }

  /* Board area should only take space it needs */
  #boardArea {
    flex: 0 0 auto; /* Only take space needed, don't expand */
    min-height: auto; /* Calculate height based on content */
    height: auto; /* Allow height to be calculated from board content */
  }

  /* Add proper spacing between input area and keyboard in medium mode */
  #inputArea {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin-bottom: 8px;
    width: var(--board-width);
    gap: calc(var(--tile-gap) * 2);
    flex: 0 0 auto; /* Don't allow input area to shrink */
  }
}

/* Large screens - intermediate breakpoint (901px - 1199px) */
@media (min-width: 901px) and (max-width: 1199px) {
  :root {
    --tile-size: var(--current-tile-size, min(9vmin, 48px));
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4);
  }
}

/* Large screens - problem range (1200px - 1550px) */
@media (min-width: 1200px) and (max-width: 1550px) {
  :root {
    --tile-size: var(--current-tile-size, 60px) !important;
    --tile-gap: 7px !important;
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4) !important;
    /* Ensure UI scale doesn't become too small in this range */
    --ui-scale: max(var(--current-scale-factor, 1), 0.9);
  }

  /* Ensure leaderboard emojis maintain minimum size */
  .player-emoji {
    font-size: max(calc(1.2em * var(--ui-scale)), 1.1em) !important;
    min-width: 1.2em;
  }

  /* Large screens use unified button sizing */
}

/* Very large screens (min-width: 1551px) */
@media (min-width: 1551px) {
  :root {
    --tile-size: var(--current-tile-size, 65px) !important;
    --tile-gap: 6px !important;
    --board-width: calc(var(--tile-size) * 5 + var(--tile-gap) * 4) !important;
  }

  .game-container {
    max-width: 1400px;
    margin: 0 auto;
  }

  /* Very large screens use unified button sizing */
}