/* ─────────────────────────────────────────────
   Layout - CSS Grid-based positioning and panel layouts  
   ───────────────────────────────────────────── */

/* Main Grid Container */
#mainGrid {
  display: grid;
  width: 100%;
  height: 100%;
  gap: 20px;
  align-items: start;
  justify-content: center;
  position: relative;
  /* Grid area definitions for different breakpoints will be defined in media queries */
  /* Enhanced transitions for smooth layout mode changes */
  transition: grid-template-columns 0.3s ease-in-out, 
              grid-template-areas 0.3s ease-in-out,
              gap 0.3s ease-in-out;
}

/* Grid area assignments for panels */
#historyBox {
  grid-area: history;
}

#stampContainer {
  grid-area: stamp;
}

#centerPanel {
  grid-area: center;
}

#definitionBox {
  grid-area: definition;
}

#chatBox {
  grid-area: chat;
}

/* Center panel contains the game content */
#centerPanel {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: var(--board-width); /* Minimal buffer for tight layout, stamps positioned separately */
  min-width: var(--board-width);
  /* Enhanced panel transitions for responsive scaling */
  transition: width 0.3s ease-in-out, 
              max-width 0.3s ease-in-out, 
              min-width 0.3s ease-in-out,
              transform 0.3s ease-in-out;
}

/* Panel positioning and layout - Updated for Grid */
#historyBox {
  width: 260px;
  max-height: calc(100vh - 160px);
  background: var(--bg-color);
  border-radius: 20px;
  padding: 20px;
  box-shadow: 
    inset 4px 4px 8px var(--inset-shadow-dark),
    inset -4px -4px 8px var(--inset-shadow-light),
    8px 8px 16px var(--shadow-color-dark),
    -8px -8px 16px var(--shadow-color-light);
  overflow-y: auto;
  z-index: var(--z-panel-base);
  /* Enhanced panel transition animations */
  transition: opacity 0.3s ease-in-out, 
              transform 0.3s ease-in-out,
              width 0.3s ease-in-out;
  /* Use visibility instead of transforms for show/hide */
  visibility: visible;
  opacity: 1;
}

#definitionBox {
  width: 260px;
  max-height: calc(100vh - 160px);
  background: var(--bg-color);
  border-radius: 20px;
  padding: 20px;
  box-shadow: 
    inset 4px 4px 8px var(--inset-shadow-dark),
    inset -4px -4px 8px var(--inset-shadow-light),
    8px 8px 16px var(--shadow-color-dark),
    -8px -8px 16px var(--shadow-color-light);
  overflow-y: auto;
  z-index: var(--z-panel-base);
  /* Enhanced panel transition animations */
  transition: opacity 0.3s ease-in-out, 
              transform 0.3s ease-in-out,
              width 0.3s ease-in-out;
  /* Use visibility instead of transforms for show/hide */
  visibility: visible;
  opacity: 1;
}

#chatBox {
  width: 260px;
  height: calc(100vh - 160px);
  background: var(--bg-color);
  border-radius: 20px;
  padding: 20px;
  box-shadow: 
    inset 4px 4px 8px var(--inset-shadow-dark),
    inset -4px -4px 8px var(--inset-shadow-light),
    8px 8px 16px var(--shadow-color-dark),
    -8px -8px 16px var(--shadow-color-light);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  z-index: var(--z-panel-base);
  /* Enhanced panel transition animations */
  transition: opacity 0.3s ease-in-out, 
              transform 0.3s ease-in-out,
              width 0.3s ease-in-out;
  /* Use visibility instead of transforms for show/hide */
  visibility: visible;
  opacity: 1;
}

/* Panel visibility states - Updated to use visibility and display instead of transforms */
body:not(.history-open) #historyBox {
  display: none;
}

body:not(.definition-open) #definitionBox {
  display: none;
}

body:not(.chat-open) #chatBox {
  display: none;
}

body.history-open #historyBox {
  display: block;
  visibility: visible;
  opacity: 1;
}

body.definition-open #definitionBox {
  display: block;
  visibility: visible;
  opacity: 1;
}

body.chat-open #chatBox {
  display: flex;
  visibility: visible;
  opacity: 1;
}

/* Desktop Grid Layout (>900px) - Responsive column widths with history panel overflow detection */
@media (min-width: 901px) {
  #mainGrid {
    /* Wide desktop: center the layout with history panel close to stamps */
    grid-template-columns: 1fr 280px 60px minmax(auto, var(--board-width)) 280px 1fr;
    grid-template-rows: auto;
    grid-template-areas: 
      ". history stamp center definition ."
      ". history stamp center chat .";
    justify-content: center;
    max-width: none;
    /* Reduce gap for tighter spacing */
    gap: 15px;
  }
  
  /* Narrow desktop layout - history panel becomes popup to prevent overflow */
  body[data-history-popup="true"] #mainGrid {
    /* Remove history from grid layout on narrow screens */
    grid-template-columns: 1fr 60px minmax(auto, var(--board-width)) 280px 1fr;
    grid-template-areas: 
      ". stamp center definition ."
      ". stamp center chat .";
  }
  
  /* History panel popup styling for narrow desktop screens */
  body[data-history-popup="true"] #historyBox {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: var(--z-panel-overlay);
    max-width: 90%;
    max-height: 80vh;
    width: 280px; /* Use optimal width when space allows */
  }
  
  /* For ultra-wide displays (>1550px), always use full grid layout */
  @media (min-width: 1551px) {
    #mainGrid {
      /* Center the layout and position history panel closer to stamps */
      grid-template-columns: 1fr 280px 60px minmax(auto, var(--board-width)) 280px 1fr;
      grid-template-areas: 
        ". history stamp center definition ."
        ". history stamp center chat .";
      /* Slightly larger gap on ultra-wide screens */
      gap: 20px;
    }
    
    /* Override history popup on ultra-wide screens */
    body[data-history-popup="true"] #mainGrid {
      grid-template-columns: 1fr 280px 60px minmax(auto, var(--board-width)) 280px 1fr;
      grid-template-areas: 
        ". history stamp center definition ."
        ". history stamp center chat .";
    }
    
    body[data-history-popup="true"] #historyBox {
      position: static;
      transform: none;
      z-index: var(--z-panel-base);
      max-width: none;
      max-height: calc(100vh - 160px);
      width: auto;
    }
  }
}

/* Tablet Grid Layout (601-900px) */
@media (min-width: 601px) and (max-width: 900px) {
  #mainGrid {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    grid-template-areas: "center";
    justify-content: center;
  }
  
  /* In medium mode, panels become overlays but maintain their grid areas for consistency */
  body[data-mode='medium'] #historyBox,
  body[data-mode='medium'] #definitionBox,
  body[data-mode='medium'] #chatBox {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: var(--z-panel-overlay);
    max-width: 90%;
    max-height: 80vh;
  }
}

/* Mobile Grid Layout (≤600px) */
@media (max-width: 600px) {
  #mainGrid {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    grid-template-areas: "center";
    gap: 0;
  }
  
  /* Mobile panels as overlays - positioning handled in responsive.css */
}

/* Popup modals that fill the viewport */
#emojiModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-modal-backdrop);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

#closeCallPopup {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-modal-backdrop);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

#infoPopup {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-modal-backdrop);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

#shareModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-modal-backdrop);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

/* Mobile panel positioning moved to responsive.css to avoid conflicts */

/* Chat notification styles */
#chatNotify {
  display: block;
  font-size: 26px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 5px;
  color: var(--text-color-light);
  line-height: 1;
  position: absolute;
  top: 36px;
  right: calc(-36px - 10px); /* Position to the right of the board with 10px gap */
  opacity: 1;
  transform: scale(1);
  transition: opacity 0.3s, transform 0.3s;
  z-index: 60;
}

#chatNotify.visible {
  opacity: 1;
  transform: scale(1);
}

#chatNotify.wiggle {
  animation: wiggle 0.6s;
}

@keyframes wiggle {
  0%, 100% { transform: scale(1) rotate(0deg); }
  25% { transform: scale(1.1) rotate(-5deg); }
  50% { transform: scale(1) rotate(5deg); }
  75% { transform: scale(1.1) rotate(-5deg); }
}

/* Options toggle positioning */
#optionsToggle {
  display: block;
  font-size: 28px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 5px;
  color: var(--text-color-light);
  line-height: 1;
  position: absolute;
  top: 0;
  right: calc(-36px - 10px); /* Position to the right of the board with 10px gap */
}

/* Extra small mobile adjustments */
@media (max-width: 400px) {
  :root {
    --tile-size: min(12vmin, 36px);
  }
  
  body {
    font-size: 14px;
  }
  
  #appContainer {
    padding: 5px;
  }
}

@media (max-width: 350px) {
  body {
    font-size: 14px;
  }
  
  #appContainer {
    padding: 5px;
  }
}

/* Lobby header styles */
#lobbyHeader {
  text-align: center;
  margin-bottom: 20px;
  font-size: 24px;
  font-weight: bold;
  color: var(--text-color);
}

/* Hint tooltip element styles */
#hintTooltip {
  position: absolute;
  background: var(--bg-color);
  color: var(--text-color);
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 14px;
  white-space: nowrap;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  pointer-events: none;
  opacity: 0;
  transform: translateY(5px);
  transition: opacity 0.2s, transform 0.2s;
}

#hintTooltip.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Ghost tile styling */
.tile.ghost {
  opacity: 0.4;
  border: 2px dashed var(--text-color);
  outline: 2px dashed var(--text-color);
  outline-offset: -2px;
}